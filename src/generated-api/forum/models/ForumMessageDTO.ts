/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ForumReactionEntry, ForumReactionEntryFromJSON, ForumReactionEntryToJSON } from './';

/**
 *
 * @export
 * @interface ForumMessageDTO
 */
export class ForumMessageDTO {
    /**
     *
     * @type {string}
     * @memberof ForumMessageDTO
     */
    threadId: string;
    /**
     *
     * @type {string}
     * @memberof ForumMessageDTO
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ForumMessageDTO
     */
    content: string;
    /**
     *
     * @type {string}
     * @memberof ForumMessageDTO
     */
    author: string;
    /**
     *
     * @type {string}
     * @memberof ForumMessageDTO
     */
    createdAt: string;
    /**
     *
     * @type {string}
     * @memberof ForumMessageDTO
     */
    updatedAt: string;
    /**
     *
     * @type {boolean}
     * @memberof ForumMessageDTO
     */
    deleted: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ForumMessageDTO
     */
    edited: boolean;
    /**
     *
     * @type {ForumMessageDTO}
     * @memberof ForumMessageDTO
     */
    repliedMessage: ForumMessageDTO;
    /**
     *
     * @type {Array<ForumReactionEntry>}
     * @memberof ForumMessageDTO
     */
    reactions: Array<ForumReactionEntry>;
}

export function ForumMessageDTOFromJSON(json: any): ForumMessageDTO {
    return ForumMessageDTOFromJSONTyped(json, false);
}

export function ForumMessageDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForumMessageDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'threadId': json['threadId'],
        'id': json['id'],
        'content': json['content'],
        'author': json['author'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'deleted': json['deleted'],
        'edited': json['edited'],
        'repliedMessage': ForumMessageDTOFromJSON(json['repliedMessage']),
        'reactions': ((json['reactions'] as Array<any>).map(ForumReactionEntryFromJSON)),
    };
}

export function ForumMessageDTOToJSON(value?: ForumMessageDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'threadId': value.threadId,
        'id': value.id,
        'content': value.content,
        'author': value.author,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'deleted': value.deleted,
        'edited': value.edited,
        'repliedMessage': ForumMessageDTOToJSON(value.repliedMessage),
        'reactions': ((value.reactions as Array<any>).map(ForumReactionEntryToJSON)),
    };
}


